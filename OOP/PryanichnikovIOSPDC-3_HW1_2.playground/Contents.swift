import UIKit
//Задача 1
//Тип оперативной памяти - +- известных и актуальных типов оперативной памяти ограниченное кол-во, подойдет  enum
enum TypeOfMemory {
    case DDR
    case DDR2
    case DDR3
    case DDR3L
    case DDR4
    case DDR5
    case RDRAM
    case SDRAM
}

//Загрузка и выгрузка данных из оперативной памяти - лучше всего подойдет protocol, достаточно точно опишет любую работу с оперативной памятью
protocol LoadRam {
    func downloadMemory()
    func operations()
    func unloadingMemory()
}

//Часы AppleWatch - подойдет класс, будет содержать некоторые базовые свойства и методы, в дальнейшем может послужить родителем
class AppleWatch {
    var osVersion = "8.3.1"
    var storage = "32GB"
    
    func setTimer() {
        
    }
    
    func showTime() {
        
    }
}
//Габариты корпуса - подойдет структура, у габаритов корпуса будет несколько свойств
struct CaseDimentions {
    let width = 0
    let height = 0
    let depth = 0
}

//Задача 2
//Ассоцияция
//1. Компьютерная мышь и компьютер, компьютерная мышь может существовать как отдельный от компьютера объект например для подключения к ТВ или приставке, но компьютер также можети и содержать ссылку на объект мышь, если удалить компьютер, то мышь не удалится
//2. Флеш карта и смартфон, флешкарта может существовать как отдельный от смартфона объект, например для подключения в фотоаппарат, но смартфон также может содержать в себе ссылку на объект флеш карта

//Агрегация
//1. Корпус наушников, корпус наушников это часть объекта наушники и существовать отдельно от наушников не может, в этом нет смысла.
//2. Фотобарабан в МФУ, отдельное сущестование фотобарабана невозможно себе представить, МФУ будет содежать в себе фотобарабан
